} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t => 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df))
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df))
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
t <- 6.1 - t
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df))
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
t <- 6.1 - t
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df))
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df))
#vec[i] <- ps(i, df)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
#print(i)
#print(ps(i, df))
ps(i,df)
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
print(t)
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
#print(i)
#print(ps(i, df))
ps(i,df)
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
print(t_temp)
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
#print(i)
#print(ps(i, df))
ps(i,df)
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
t_temp <- (tanh_max/(t-6))*t
print(t_temp)
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
#print(i)
#print(ps(i, df))
ps(i,df)
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
print(t_temp)
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
#print(i)
#print(ps(i, df))
ps(i,df)
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
t_temp <- tanh_max - t_temp
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df)))
#vec[i] <- ps(i, df)
}
# von 0 bis 6 Spline
# von 6 bis 6.1 ~ 1+ tanh(k*(x-x0))
# von 6.1 bis 12 Spline
ps <- function(t, df) {
ret <- numeric()
if(t < 6) {
a <- df[df$t < 6,]
a_spl <- spline(a$t, a$ps, xout = t)
ret <- a_spl$y
} else if(t >= 6.1) {
c <- df[df$t > 6.1,]
c_spl <- spline(c$t, c$ps, xout = t)
ret <- c_spl$y
} else {
k <- 120 # Tag-Nacht
t_ende_tag <- 6
t_anfang_nacht <- 6.1
t_diff <- t_anfang_nacht - t_ende_tag
# tanh zwischen 0 und 9 -> Werte zwischen 0 und 1
t <- t - 6
tanh_max <- 9
t_temp <- (tanh_max/0.1)*t
t_temp <- tanh_max - t_temp
#print(t_temp)
temp <- tanh(t_temp)
ret <- temp*k
}
return(ret)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
print(i)
print(ps(i, df))
#vec[i] <- ps(i, df)
}
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
vec[i] <- ps(i, df)
}
plot(df$t, df$ps)
points(vec)
plot(df$t, df$ps)
points(vec, pch = 19, col = "darkred")
plot(df$t, df$ps)
points(time,vec, pch = 19, col = "darkred")
plot(time, vec)
vec
time <- c(seq(0, 6, 2), seq(6, 6.1, 0.01), seq(6.1, 12, 0.1))
vec <- vector(length = length(time))
for(i in time)  {
vec[i] <- ps(i, df)
}
vec
source('~/.active-rstudio-document')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
Rcpp::sourceCpp('Uni/1paropt/Rcpp_Interface/Test.cpp')
test_integration(df$time, start, states, output, solvertyp)
test_integration(df$time, start, states, output, solvertyp)
solvertyp <- "BDF"
test_integration(df$time, start, states, output, solvertyp)
solvertyp <- "bdf"
test_integration(df$time, start, states, output, solvertyp)
test_integration(df$time, start, states, output, solvertyp)
test_integration(df$time, start, states, output, solvertyp)
test_integration(df$time, start, states, output, solvertyp)
test_integration(df$time, start, states, output, solvertyp)
test_integration(df$time, start, states, output, solvertyp)
runif(13)
library(paropt)
library(brew)
Rcpp::sourceCpp('Uni/3Praktikum_2020/Session4/photosynthesis_alternative2.cpp')
time <- c(0.,0.0333564975677554,0.0667129951355108,0.100069492703266,0.133425990271022,0.166782487838777,0.200138985406532,0.233495482974288,0.266851980542043,0.300208478109798,0.333564975677554,0.366921473245309,0.400277970813065,0.433634468380820,0.466990965948575,0.500347463516331,0.533703961084086,0.567060458651842,0.600416956219597,0.633773453787352,0.667129951355108,0.700486448922863,0.733842946490618,0.767199444058374,0.800555941626129,0.833912439193885,0.867268936761640,0.900625434329396,0.933981931897151,0.967338429464906,1.00069492703266,1.03405142460042,1.06740792216817,1.10076441973593,1.13412091730368,1.16747741487144,1.20083391243919,1.23419041000695,1.26754690757470,1.30090340514246,1.33425990271022,1.36761640027797,1.40097289784573,1.43432939541348,1.46768589298124,1.50104239054899,1.53439888811675,1.56775538568450,1.60111188325226,1.63446838082001,1.66782487838777,1.95135510771369,2.23488533703961,2.51841556636553,2.80194579569145,3.08547602501737,3.36900625434329,3.65253648366922,3.93606671299514,4.21959694232106,4.50312717164698,4.78665740097290,5.07018763029882,5.35371785962474,5.63724808895066,5.92077831827658,6.20430854760250,6.48783877692842,6.77136900625434,7.05489923558026,7.33842946490619,7.62195969423211,7.90548992355803,8.18902015288395,8.47255038220987,8.75608061153579,9.03961084086171,9.32314107018763,9.60667129951355,9.89020152883947,10.1737317581654,10.4572619874913,10.7407922168172,11.0243224461432,11.3078526754691,11.5913829047950,11.8749131341209,12.1584433634468,12.4419735927728,12.7255038220987,13.0090340514246,13.2925642807505,13.5760945100764,13.8596247394024,14.1431549687283,14.4266851980542,14.7102154273801,14.9770674079222,15.0104239054899,15.0437804030577,15.0771369006254,15.1104933981932,15.1438498957609,15.1772063933287,15.2105628908965,15.2439193884642,15.2772758860320,15.3106323835997,15.3439888811675,15.3773453787352,15.4107018763030,15.4440583738707,15.4774148714385,15.5107713690063,15.5441278665740,15.5774843641418,15.6108408617095,15.6441973592773,15.6775538568450,15.7109103544128,15.7442668519805,15.7776233495483,15.8109798471161,15.8443363446838,15.8776928422516,15.9110493398193,15.9444058373871,15.9777623349548,16.0111188325226,16.0444753300903,16.0778318276581,16.1111883252259,16.1445448227936,16.1779013203614,16.2112578179291,16.2446143154969,16.2779708130646,16.3113273106324,16.3446838082001,16.3780403057679,16.4113968033357,16.4447533009034,16.4781097984712,16.5114662960389,16.5448227936067,16.5781792911744,16.6115357887422,16.6448922863099,16.6782487838777,16.7116052814454,16.7449617790132,16.7783182765810,16.8116747741487,16.8450312717165,16.8783877692842,16.9117442668520,16.9451007644197,16.9784572619875,17.0118137595552,17.0451702571230,17.0785267546908,17.1118832522585,17.3954134815844,17.6789437109104,17.9624739402363,18.2460041695622,18.5295343988881,18.8130646282140,19.0965948575400,19.3801250868659,19.6636553161918,19.9471855455177,20.2307157748436,20.5142460041696,20.7977762334955,21.0813064628214,21.3648366921473,21.6483669214732,21.9318971507992,22.2154273801251,22.4989576094510,22.7824878387769,23.0660180681029,23.3495482974288,23.6330785267547,23.9166087560806,24)
ps <- c
out <- vector(length = length(time))
p <- 0
for(i in time) {
out[p] <- spline_ps(i)
p <- p + 1
}
plot(time, ps)
points(time, out, pch = 19, col = "darkred")
out2 <- vector(length = length(seq(0,24,0.001)))
p <- 0
for(i in seq(0, 24, 0.001)) {
out2[p] <- spline_ps(i)
p <- p + 1
}
plot(time, ps, ylim = c(-10, 160))
points(seq(0,24, 0.001), out2, pch = 19, col = "darkred")
plot(time, ps)
setwd("/home/konrad/Uni/1paropt/paropt")
Rcpp::compileAttributes()
roxygen2::roxygenise()
