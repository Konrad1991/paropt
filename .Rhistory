library(highr)
hilight("x=1 # assignment")
txt = c("a <- 1 # something", "c(y=\"world\", z=\"hello\")", "b=function(x=5) {",
"for(i in 1:10) {
if (i < x) print(i) else break}}", "z@child # S4 slot",
"'special chars <>#$%&_{}'")
cat(hi_latex(txt), sep = "\n")
cat(hi_html(txt), sep = "\n")
# the markup data frames
highr:::cmd_latex
highr:::cmd_html
hilight("x=1 # assignment")
txt = c("a <- 1 # something", "c(y=\"world\", z=\"hello\")", "b=function(x=5) {",
"for(i in 1:10) {
if (i < x) print(i) else break}}", "z@child # S4 slot",
"'special chars <>#$%&_{}'")
txt
cat(hi_latex(txt), sep = "\n")
cat(hi_html(txt), sep = "\n")
highr:::cmd_latex
highr:::cmd_html
detach("package:highr", unload = TRUE)
a <- "1:5"
a
eval(a)
noquote(a)
as.integer("1:5")
as.integer("15")
as.vector(noquote("1:5"))
c(noquote("1:5"))
as.numeric(noquote("1:5"))
as.numeric(as.vector(noquote("1:5")))
as.numeric(as.integer(noquote("1:5")))
as.numeric(as.numeric(noquote("1:5")))
as.numeric(noquote("1:5"))
is.numeric(noquote("1.5"))
is.numeric(noquote("1:5"))
noquote("1:5")
is.numeric(as.numeric(noquote("1:5")))
as.numeric(noquote("1:5"))
is.numeric(1:5)
as.vector.factor("1:5")
as.vector(noquote("1:5"))
c(noquote("1:5"))
is.numeric(c(noquote("1:5")))
is.numeric(as.numeric(c(noquote("1:5"))))
is.character(c(noquote("1:5")))
apply(noquote("1:5"), as.numeric)
apply(noquote("1:5"),2, as.numeric)
for(i in noquote("1:5")) {}
for(i in noquote("1:5")) {print(i)}
sapply(noquote("1:5"),as.numeric)
a <- "1:5"
as.numeric(a)
as.numeric(noquote(a))
noquote(a)
noquote(a)[1]
unlist(noquote(a))
as.numeric(unlist(noquote(a)))
?as.numeric
as.numeric(c(unlist(noquote(a))))
c(unlist(noquote(a)))
is.numeric(c(unlist(noquote(a)))
is.numeric(c(unlist(noquote(a))))
is.numeric(c(unlist(noquote(a))))
as.numeric(c(unlist(noquote(a))))
eval(parse("1:5"))
eval(parse(text = "1:5"))
is.numeric(eval(parse(text = a)))
Rcpp::sourceCpp('Uni/ParOptSof/Praktikum_2020/temp.cpp')
Rcpp::sourceCpp('Uni/ParOptSof/Praktikum_2020/temp.cpp')
Rcpp::sourceCpp('Uni/ParOptSof/Praktikum_2020/temp.cpp')
Rcpp::sourceCpp('Uni/ParOptSof/Praktikum_2020/temp.cpp')
path <- system.file("examples", package = "paropt")
library(paropt)
#Rcpp::sourceCpp(paste(path,"/ode.cpp", sep = ""))
#if you want compile ode-system on your system (already precompiled in package)
df <- read.table(paste(path,"/states_LV.txt", sep = ""), header = TRUE)
time <- df$time
param_start <- paste(path, "/start.txt", sep = "")
states <- paste(path, "/states_LV.txt", sep = "")
state_output <- paste(path, "/final_stateoutput.txt", sep = "")
ode_solving(time, paropt:::ode_example, 1e-6, c(1e-8, 1e-8),
param_start,
states,
state_output, "bdf")
df_in_silico <- read.table(paste(path, "/final_stateoutput.txt", sep = ""), header = TRUE)
plot(df$time, df$n1, pch = 19, main = "predator", ylab = "predator", xlab = "time")
points(df_in_silico$time, df_in_silico$n1, pch = 19, col = "darkred")
legend(1, 26, legend = c("measured", "in silico"),
col = c("black", "darkred"),lty = 1:2, cex = 0.8)
plot(df$time, df$n2, pch = 19, main = "prey",ylab = "prey", xlab = "time")
points(df_in_silico$time, df_in_silico$n2, pch = 19, col = "darkred")
legend(1, 26, legend = c("measured", "in silico"),
col = c("black", "darkred"),lty = 1:2, cex = 0.8)
path <- system.file("examples", package = "paropt")
library(paropt)
#Rcpp::sourceCpp(paste(path,"/ode.cpp", sep = ""))
#if you want compile ode-system on your system (already precompiled in package)
df <- read.table(paste(path,"/states_LV.txt", sep = ""), header = TRUE)
time <- df$time
param_start <- paste(path, "/start.txt", sep = "")
param_lb <- paste(path, "/lb.txt", sep = "")
param_ub <- paste(path, "/ub.txt", sep = "")
states <- paste(path, "/states_LV.txt", sep = "")
state_output <- paste(path, "/final_stateoutput.txt", sep = "")
par_output <- paste(path, "/optimized_params.txt", sep = "")
set.seed(1)
optimizer(time, paropt:::ode_example, 1e-6, c(1e-8, 1e-8),
param_start, param_lb, param_ub,
states, npop = 10, ngen = 200, error = 3,
state_output, par_output, "bdf")
df_in_silico <- read.table(paste(path, "/final_stateoutput.txt", sep = ""), header = TRUE)
plot(df$time, df$n1, pch = 19, main = "predator", ylab = "predator", xlab = "time")
points(df_in_silico$time, df_in_silico$n1, pch = 19, col = "darkred")
legend(1, 26, legend = c("measured", "in silico"),
col = c("black", "darkred"),lty = 1:2, cex = 0.8)
plot(df$time, df$n2, pch = 19, main = "prey",ylab = "prey", xlab = "time")
points(df_in_silico$time, df_in_silico$n2, pch = 19, col = "darkred")
legend(1, 26, legend = c("measured", "in silico"),
col = c("black", "darkred"),lty = 1:2, cex = 0.8)
Rcpp::sourceCpp('Uni/ParOptSof/Praktikum_2020/temp.cpp')
a <- c(0,0,0,0,0,0, 1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1)
b <- c(1,1,1,1,1,1,rep(0,6), 1,1,1,1,rep(0,5))
df <- data.frame(a,b)
b <- c(1,1,1,1,1,1,rep(0,6), 1,1,1,1,1,rep(0,5))
df <- data.frame(a,b)
df
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(b)
subset_generieren(a)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
a <- c(0,0,0,0,0,0, 1,2,3,4,5,6,0,0,0,0,0,7,8,9,10,11)
subset_generieren(a)
b <- c(1,2,3,4,5,6,rep(0,6), 7,8,9,10,11,rep(0,5))
subset_generieren(b)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(a)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
a
f <- c(0,0,0,1,1,1,0,0,0)
f_idx <- 0:8
f
f
f_idx
f <- c(0,0,0,1,1,1,0,0,0,1,1,1)
f_idx <- 0:11
f
f_idx
f
f_idx
subset_generieren(a)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(a)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(a)
subset_generieren(a)
subset_generieren(b)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(a)
#subset_generieren(a)
f <- c(0,0,0,1,1,1,0,0,0,1,1,1)
subset_generieren(f)
f_idx <- 0:11
subset_generieren(f)
f_idx
#subset_generieren(a)
f <- c(0,0,0,1,1,1,0,0,0,1,1,1)
f_idx <- 0:11
subset_generieren(f)
f
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
f <- c(1,1,1,0,0,0,1,1,1,0,0,0)
f_idx <- 0:11
subset_generieren(f)
f
f_idx
#subset_generieren(a)
f <- c(0,0,0,1,1,1,0,0,0,1,1,1)
subset_generieren(f)
f
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
#subset_generieren(a)
f <- c(0,0,0,1,1,1,0,0,0,1,1,1)
f_idx <- 0:11
subset_generieren(f)
f
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
#subset_generieren(a)
f <- c(0,0,0,1,1,1,0,0,0,1,1,1)
f_idx <- 0:11
subset_generieren(f)
f
f_idx
f <- c(1,1,1,0,0,0,1,1,1,0,0,0)
f_idx <- 0:11
subset_generieren(f)
f
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(list(df),1)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(list(df),1)
subset_generieren(data.frame(f,f),1)
subset_generieren(data.frame(c(1.,2.,3.),f),1)
subset_generieren(data.frame(c(1.,2.,3.),f),0)
subset_generieren(list(data.frame(c(1.,2.,3.),f)),0)
subset_generieren(list(data.frame(c(1.,2.,3.),f)),0.)
subset_generieren(list(f,f),0.)
list(f,f)
subset_generieren(matrix(),0.)
matrix(f,f)
as.matrix(df)
subset_generieren(as.matrix(df),0.)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),0.)
subset_generieren(as.matrix(df),0.)
#subset_generieren(a)
f1 <- c(0,0,0,1,1,1,0,0,0,1,1,1)
f2 <- c(1,1,1,0,0,0,1,1,1,0,0,0)
df <- data.frame(f1,f2)
f_idx <- 0:11
subset_generieren(as.matrix(df),0.)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),0.)
f1
f2
f_idx
subset_generieren(as.matrix(df),1)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
f1
f2
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
f1
f2
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
length(f_idx)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
f1
f2
f_idx
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),0)
df
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
df
Rcpp::sourceCpp('Uni/URAS_subset_generieren/subset_generieren.cpp')
subset_generieren(as.matrix(df),1)
library(roxygen2)
library(usethis)
library(devtools)
setwd("/home/konrad/Uni/FinalesPackage/re_submit/paropt/V0.1/paropt")
document()
library(Rdpack)
setwd("/home/konrad/Uni/FinalesPackage/re_submit/paropt/V0.1/paropt")
document()
document()
document()
document()
?`Rdpack
)
)
}
!
()
ß
()
''
'
""
